# name: EKS Infra + App Deploy
# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     name: Provision infrastructure and ArgoCD
#     runs-on: ubuntu-latest

#     env:
#       AWS_REGION: us-east-1

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2

#       - name: Terraform Init
#         working-directory: terraform/
#         run: terraform init

#       - name: Validate Terraform
#         working-directory: terraform/
#         run: terraform validate

#       - name: Plan Terraform
#         working-directory: terraform/
#         run: terraform plan

#       - name: Terraform Apply
#         working-directory: terraform/
#         run: terraform apply -auto-approve

#   deploy:
#     name: Deploy app via ArgoCD
#     runs-on: ubuntu-latest
#     needs: terraform

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Install kubectl
#         uses: azure/setup-kubectl@v3

#       - name: Update kubeconfig for EKS
#         run: |
#           aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name aws_eks_cluster.main.name

#       - name: Install Argo CD on EKS
#         run: |
#           kubectl create namespace argocd || true

#           kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

#           echo "Waiting for Argo CD pods to be ready..."
#           kubectl rollout status deployment/argocd-server -n argocd --timeout=180s

#       - name: Get Argo CD Admin Password
#         run: |
#           echo "Admin password:"
#           kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d && echo ""

 
